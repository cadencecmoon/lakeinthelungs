opt_src = files(
    'aggressive_dead_code_elim_pass.cpp',
    'amd_ext_to_khr.cpp',
    'analyze_live_input_pass.cpp',
    'basic_block.cpp',
    'block_merge_pass.cpp',
    'block_merge_util.cpp',
    'build_module.cpp',
    'ccp_pass.cpp',
    'cfg_cleanup_pass.cpp',
    'cfg.cpp',
    'code_sink.cpp',
    'combine_access_chains.cpp',
    'compact_ids_pass.cpp',
    'composite.cpp',
    'const_folding_rules.cpp',
    'constants.cpp',
    'convert_to_half_pass.cpp',
    'convert_to_sampled_image_pass.cpp',
    'copy_prop_arrays.cpp',
    'dataflow.cpp',
    'dead_branch_elim_pass.cpp',
    'dead_insert_elim_pass.cpp',
    'dead_variable_elimination.cpp',
    'debug_info_manager.cpp',
    'decoration_manager.cpp',
    'def_use_manager.cpp',
    'desc_sroa_util.cpp',
    'desc_sroa.cpp',
    'dominator_analysis.cpp',
    'dominator_tree.cpp',
    'eliminate_dead_constant_pass.cpp',
    'eliminate_dead_functions_pass.cpp',
    'eliminate_dead_functions_util.cpp',
    'eliminate_dead_io_components_pass.cpp',
    'eliminate_dead_members_pass.cpp',
    'eliminate_dead_output_stores_pass.cpp',
    'feature_manager.cpp',
    'fix_func_call_arguments.cpp',
    'fix_storage_class.cpp',
    'flatten_decoration_pass.cpp',
    'fold_spec_constant_op_and_composite_pass.cpp',
    'fold.cpp',
    'folding_rules.cpp',
    'freeze_spec_constant_value_pass.cpp',
    'function.cpp',
    'graphics_robust_access_pass.cpp',
    'if_conversion.cpp',
    'inline_exhaustive_pass.cpp',
    'inline_opaque_pass.cpp',
    'inline_pass.cpp',
    'inst_debug_printf_pass.cpp',
    'instruction_list.cpp',
    'instruction.cpp',
    'instrument_pass.cpp',
    'interface_var_sroa.cpp',
    'interp_fixup_pass.cpp',
    'invocation_interlock_placement_pass.cpp',
    'ir_context.cpp',
    'ir_loader.cpp',
    'licm_pass.cpp',
    'liveness.cpp',
    'local_access_chain_convert_pass.cpp',
    'local_redundancy_elimination.cpp',
    'local_single_block_elim_pass.cpp',
    'local_single_store_elim_pass.cpp',
    'loop_dependence_helpers.cpp',
    'loop_dependence.cpp',
    'loop_descriptor.cpp',
    'loop_fission.cpp',
    'loop_fusion_pass.cpp',
    'loop_fusion.cpp',
    'loop_peeling.cpp',
    'loop_unroller.cpp',
    'loop_unswitch_pass.cpp',
    'loop_utils.cpp',
    'mem_pass.cpp',
    'merge_return_pass.cpp',
    'modify_maximal_reconvergence.cpp',
    'module.cpp',
    'opextinst_forward_ref_fixup_pass.cpp',
    'optimizer.cpp',
    'pass_manager.cpp',
    'pass.cpp',
    'private_to_local_pass.cpp',
    'propagator.cpp',
    'reduce_load_size.cpp',
    'redundancy_elimination.cpp',
    'register_pressure.cpp',
    'relax_float_ops_pass.cpp',
    'remove_dontinline_pass.cpp',
    'remove_duplicates_pass.cpp',
    'remove_unused_interface_variables_pass.cpp',
    'replace_desc_array_access_using_var_index.cpp',
    'replace_invalid_opc.cpp',
    'scalar_analysis_simplification.cpp',
    'scalar_analysis.cpp',
    'scalar_replacement_pass.cpp',
    'set_spec_constant_default_value_pass.cpp',
    'simplification_pass.cpp',
    'spread_volatile_semantics.cpp',
    'ssa_rewrite_pass.cpp',
    'strength_reduction_pass.cpp',
    'strip_debug_info_pass.cpp',
    'strip_nonsemantic_info_pass.cpp',
    'struct_cfg_analysis.cpp',
    'switch_descriptorset_pass.cpp',
    'trim_capabilities_pass.cpp',
    'type_manager.cpp',
    'types.cpp',
    'unify_const_pass.cpp',
    'upgrade_memory_model.cpp',
    'value_number_table.cpp',
    'vector_dce.cpp',
    'workaround1209.cpp',
    'wrap_opkill.cpp',
)

spirv_tools_opt = library('spirv-tools-opt',
    spirv_generated_headers,
    opt_src,
    cpp_pch : 'meson-pch/pch.h',
    dependencies : [spirv_tools_dep, spvhdr_dep],
    include_directories : private_incdir,
    build_by_default : not meson.is_subproject(),
    override_options : cross_options,
)

spirv_tools_opt_dep = declare_dependency(
    link_with : spirv_tools_opt,
    include_directories : public_incdir,
    version : meson.project_version(),
)

spirv_tools_opt_native = library('spirv-tools-opt-native',
    spirv_generated_headers,
    opt_src,
    cpp_pch : 'meson-pch/pch.h',
    dependencies : [spirv_tools_native_dep, spvhdr_dep],
    include_directories : private_incdir,
    build_by_default : false,
    native : true,
    override_options : native_options,
)

spirv_tools_opt_native_dep = declare_dependency(
    link_with : spirv_tools_opt_native,
    include_directories : public_incdir,
    version : meson.project_version(),
)
